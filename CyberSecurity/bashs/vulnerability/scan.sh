#!/bin/bash

# Define the target URL
TARGET=$1
# Define the location for the output files
LOCATION=$2
NEWLOCATION="$LOCATION/wapiti.txt"
# Ensure the LOCATION directory exists
if [ ! -d "$LOCATION" ]; then
    mkdir -p "$LOCATION"
    if [ $? -ne 0 ]; then
        echo "Error: Unable to create directory $LOCATION."
        exit 1
    fi
fi

# Check HTTP (port 80)
curl -s --max-time 5 --head "http://$TARGET" >/dev/null
if [ $? -eq 0 ]; then
    echo "HTTP (port 80) is open on $TARGET."
    wapiti -u "http://$TARGET:80" -f txt -o "$LOCATION/wapiti-80.txt"
    cat "$LOCATION/wapiti-80.txt" >> $NEWLOCATION
    printf "\n\n" >> $NEWLOCATION
    rm -f "$LOCATION/wapiti-80.txt"
else
    echo "HTTP (port 80) is not accessible on $TARGET."
fi
# Check HTTPS (port 443)
curl -s --max-time 5 --head "https://$TARGET" >/dev/null
if [ $? -eq 0 ]; then
    echo "HTTPS (port 443) is open on $TARGET."
    wapiti -u "https://$TARGET:443" -f txt -o "$LOCATION/wapiti-443.txt"
    cat "$LOCATION/wapiti-443.txt" >> $NEWLOCATION
    printf "\n\n" >> $NEWLOCATION
    rm -f "$LOCATION/wapiti-443.txt"

else
    echo "HTTPS (port 443) is not accessible on $TARGET."
fi

# Check HTTP (port 8080)
curl -s --max-time 5 --head "http://$TARGET:8080" >/dev/null
if [ $? -eq 0 ]; then
    echo "HTTP (port 8080) is open on $TARGET."
    wapiti -u "http://$TARGET:8080" -f txt -o "$LOCATION/wapiti-8080.txt"
    cat "$LOCATION/wapiti-8080.txt" >> $NEWLOCATION
    printf "\n\n" >> $NEWLOCATION
    rm -f "$LOCATION/wapiti-8080.txt"
else
    echo "HTTP (port 8080) is not accessible on $TARGET."
fi

